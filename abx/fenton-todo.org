* Org Clock Commands

PREFIX: C-c C-x
|-----+----------------------|
| C-i | Clock In             |
| C-o | Clock Out            |
| C-j | Jump To Current Task |
| C-r | Create Clock Report  |
| C-d | Display Task Times   |
|-----+----------------------|

|---------+--------------------------|
| C-c C-c | Recalculate Clock Report |
|---------+--------------------------|

* REPORT
#+BEGIN: clocktable :maxlevel 2 :scope subtree
#+CAPTION: Clock summary at [2017-11-16 Thu 18:03]
| Headline                   | Time   |      |
|----------------------------+--------+------|
| *Total time*               | *0:02* |      |
|----------------------------+--------+------|
| REPORT                     | 0:02   |      |
| \emsp TODO #185 REPL Reset |        | 0:02 |
#+END:

** TODO #182 Offer removed from UI once all Allocations are closed

*** Description

After an offer has been completely allocated and the allocations
closed, then the offer should disappear from the offers list.

*** Solution

When an allocation is created is should update a field on the offer
called :offer/remaining-amount.

*** Bug checking

 * can an offer be over allocated? - YES! OOPS!

Lets create a testing namespace:

First create a 'close-offer' function in:  'abraxas.db.offer.clj'
in 'abraxas.ws.events.allocation.clj' in the close allocation, check
if this the last amount and therefore a close offer must be called
finally send a close-offer event back to the clients (all of them)
with the offer id
then on client side respond to a close-offer event by closing the
offer and no longer showing it.

  :LOGBOOK:  
  CLOCK: [2017-11-18 Sat 18:15]--[2017-11-18 Sat 18:20] =>  0:05
  CLOCK: [2017-11-17 Fri 10:43]--[2017-11-17 Fri 10:54] =>  0:11
  CLOCK: [2017-11-17 Fri 10:18]--[2017-11-17 Fri 10:37] =>  0:19
  CLOCK: [2017-11-16 Thu 19:01]--[2017-11-16 Thu 19:06] =>  0:05
  CLOCK: [2017-11-16 Thu 18:22]--[2017-11-16 Thu 18:39] =>  0:17
  CLOCK: [2017-11-16 Thu 18:03]--[2017-11-16 Thu 18:13] =>  0:10
  :END:      

** TODO #183 Core can edit bids
the core sales guy (aka: broker) is able to edit the bids but should
not be able to do that.

abraxas.views.bid.bid-list> (:roles @(subscribe [:user/active]))
#{:dispatch :broker :core}

We can key off :active-panel
abraxas.views.bid.bid-list> @(subscribe [:active-panel])
:core/dashboard

  :LOGBOOK:  
  :END:      

** TODO #143 Formalize Specs

start with offers

merge UI spec with regular spec...dont have two

maybe use orchestra to enable all the functional specs

** TODO #185 REPL Reset

seems when figwheel compile cljs it dumps files into 'resources'
folder which is on the classpath which messes up
namespace/refresh... i.e. it trashes mounts ability to restart.

2. solutions (1) use boot (2) split up repositories

Splitting up repositories ran into CORS issue on server side...trying
to get ring/cors wrapping up the response so sente would use it...

see abraxas.handler.clj file in abx-m2.  try to run the sample request
through the CORS middleware.

also try logging out the requests that come through ring...  since we
got the error we should be able to see the request and response that
caused the problem.

  :LOGBOOK:  
  CLOCK: [2017-11-16 Thu 18:01]--[2017-11-16 Thu 18:03] =>  0:02
  :END:      

** TODO Test offer backend

abraxas.db.offer-test

Midge test with => seems to pass even though UUID should be different...why?



   :LOGBOOK:  
   CLOCK: [2017-11-18 Sat 18:41]--[2017-11-18 Sat 18:46] =>  0:05
   CLOCK: [2017-11-18 Sat 18:20]--[2017-11-18 Sat 18:40] =>  0:20
   :END:      

